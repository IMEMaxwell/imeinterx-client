[{"C:\\Dev\\IME InterX Website\\client\\src\\index.js":"1","C:\\Dev\\IME InterX Website\\client\\src\\App.js":"2","C:\\Dev\\IME InterX Website\\client\\src\\reportWebVitals.js":"3","C:\\Dev\\IME InterX Website\\client\\src\\components\\tickets-list.component.js":"4","C:\\Dev\\IME InterX Website\\client\\src\\components\\create-user.component.js":"5","C:\\Dev\\IME InterX Website\\client\\src\\components\\edit-ticket.component.js":"6","C:\\Dev\\IME InterX Website\\client\\src\\components\\create-ticket.component.js":"7","C:\\Dev\\IME InterX Website\\client\\src\\components\\navbar.component.js":"8"},{"size":196,"mtime":1609141838400,"results":"9","hashOfConfig":"10"},{"size":842,"mtime":1609142542798,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2236,"mtime":1609164024964,"results":"13","hashOfConfig":"10"},{"size":1524,"mtime":1609144939333,"results":"14","hashOfConfig":"10"},{"size":5962,"mtime":1609153260969,"results":"15","hashOfConfig":"10"},{"size":5380,"mtime":1609145239020,"results":"16","hashOfConfig":"10"},{"size":831,"mtime":1609141482437,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"15atfsb",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Dev\\IME InterX Website\\client\\src\\index.js",[],["39","40"],"C:\\Dev\\IME InterX Website\\client\\src\\App.js",[],"C:\\Dev\\IME InterX Website\\client\\src\\reportWebVitals.js",[],"C:\\Dev\\IME InterX Website\\client\\src\\components\\tickets-list.component.js",["41","42"],"import React,{Component, component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Ticket=props=>(\r\n    <tr>\r\n        <td>{props.ticket.username}</td>\r\n        <td>{props.ticket.companyname}</td>\r\n        <td>{props.ticket.category}</td>\r\n        <td>{props.ticket.status}</td>\r\n        <td>{props.ticket.title}</td>\r\n        <td>{props.ticket.description}</td>\r\n        <td>{props.ticket.solution}</td>\r\n        <td>\r\n            <Link to={\"/edit/\"+props.ticket._id}>edit</Link> | <a href=\"#\" onClick={()=>{props.deleteTicket(props.ticket._id)}}>delete</a>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default class TicketsList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.deleteTicket=this.deleteTicket.bind(this);\r\n    \r\n        this.state={tickets:[]};\r\n    };\r\n\r\n    componentDidMount(){\r\n        axios.get('https://imeinterx.herokuapp.com/tickets/')\r\n            .then(response=>{\r\n                this.setState({tickets:response.data})\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    deleteTicket(id){\r\n        axios.delete('https://imeinterx.herokuapp.com/tickets/'+id)\r\n            .then(res=>console.log(res.data));\r\n        this.setState({\r\n            tickets:this.state.tickets.filter(el=>el._id!==id)\r\n        })\r\n    }\r\n\r\n    ticketsList(){\r\n        return this.state.tickets.map(currentticket=>{\r\n            return <Ticket ticket={currentticket} deleteTicket={this.deleteTicket} key={currentticket._id}/>;\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <h3>Logged Tickets</h3>\r\n            <table className=\"table\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th>Username</th>\r\n                  <th>Company Name</th>\r\n                  <th>Category</th>\r\n                  <th>Status</th>\r\n                  <th>Title</th>\r\n                  <th>Description</th>\r\n                  <th>Solution</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                { this.ticketsList() }\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )\r\n    }\r\n}","C:\\Dev\\IME InterX Website\\client\\src\\components\\create-user.component.js",["43"],"import React,{Component, component} from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default class CreateUser extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.onChangeUsername=this.onChangeUsername.bind(this);\r\n        this.onSubmit=this.onSubmit.bind(this);\r\n    \r\n        this.state={\r\n            username:'',\r\n        }\r\n    }\r\n\r\n    onChangeUsername(e){\r\n        this.setState({\r\n            username:e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n    \r\n        const user ={\r\n            username:this.state.username,\r\n        }\r\n    \r\n        console.log(user)\r\n    \r\n        axios.post('http://localhost:5000/users/add', user)\r\n        .then(res=>console.log(res.data));\r\n\r\n        this.setState({\r\n            username:''\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n            <h3>Create New User</h3>\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\"> \r\n                <label>Username: </label>\r\n                <input  type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"submit\" value=\"Create User\" className=\"btn btn-primary\" />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )\r\n    }\r\n}","C:\\Dev\\IME InterX Website\\client\\src\\components\\edit-ticket.component.js",["44"],"import React,{Component, component} from 'react'\r\nimport axios from'axios';\r\n\r\nexport default class EditTicket extends Component{\r\nconstructor(props){\r\n    super(props);\r\n\r\n    this.onChangeUsername=this.onChangeUsername.bind(this);\r\n    this.onChangeCompanyname=this.onChangeCompanyname.bind(this);\r\n    this.onChangeCategory=this.onChangeCategory.bind(this);\r\n    this.onChangeStatus=this.onChangeStatus.bind(this);\r\n    this.onChangeTitle=this.onChangeTitle.bind(this);\r\n    this.onChangeDescription=this.onChangeDescription.bind(this);\r\n    this.onChangeSolution=this.onChangeSolution.bind(this);\r\n    this.onSubmit=this.onSubmit.bind(this);\r\n\r\n    this.state={\r\n        username:'',\r\n        companyname:'',\r\n        category:'',\r\n        status:'',\r\n        title:'',\r\n        description:'',\r\n        solution:'',\r\n        users:[]\r\n    }\r\n}\r\n\r\ncomponentDidMount(){\r\n    axios.get('http://localhost:5000/tickets/'+this.props.match.params.id)\r\n        .then(response=>{\r\n            this.setState({\r\n                username:response.data.username,\r\n                companyname:response.data.companyname,\r\n                category:response.data.category,\r\n                status:response.data.status,\r\n                title:response.data.title,\r\n                description:response.data.description,\r\n                solution:response.data.solution,\r\n            })\r\n        })\r\n        .catch(function(error){\r\n            console.log(error)\r\n        })\r\n\r\n    axios.get('http://localhost:5000/users/')\r\n    .then(response=>{\r\n        if(response.data.length>0){\r\n            this.setState({\r\n                users:response.data.map(user=>user.username),\r\n                \r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nonChangeUsername(e){\r\n    this.setState({\r\n        username:e.target.value\r\n    });\r\n}\r\n\r\nonChangeCompanyname(e){\r\n    this.setState({\r\n        companyname:e.target.value\r\n    });\r\n}\r\n\r\nonChangeCategory(e){\r\n    this.setState({\r\n        category:e.target.value\r\n    });\r\n}\r\n\r\nonChangeStatus(e){\r\n    this.setState({\r\n        status:e.target.value\r\n    });\r\n}\r\n\r\nonChangeTitle(e){\r\n    this.setState({\r\n        title:e.target.value\r\n    });\r\n}\r\n\r\nonChangeDescription(e){\r\n    this.setState({\r\n        description:e.target.value\r\n    });\r\n}\r\n\r\nonChangeSolution(e){\r\n    this.setState({\r\n        solution:e.target.value\r\n    });\r\n}\r\n\r\nonSubmit(e){\r\n    e.preventDefault();\r\n\r\n    const ticket ={\r\n        username:this.state.username,\r\n        companyname:this.state.companyname,\r\n        category:this.state.category,\r\n        status:this.state.status,\r\n        title:this.state.title,\r\n        description:this.state.description,\r\n        solution:this.state.solution\r\n    }\r\n\r\n    console.log(ticket)\r\n\r\n    axios.post('http://localhost:5000/tickets/update/'+this.props.match.params.id, ticket)\r\n        .then(res=>console.log(res.data));\r\n\r\n\r\n    window.location='/';\r\n}\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <h3>Edit Ticket Log</h3>\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\"> \r\n                <label>Username: </label>\r\n                <select ref=\"userInput\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}>\r\n                    {\r\n                      this.state.users.map(function(user) {\r\n                        return <option \r\n                          key={user}\r\n                          value={user}>{user}\r\n                          </option>;\r\n                      })\r\n                    }\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\"> \r\n                <label>Company Name: </label>\r\n                <input  type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.companyname}\r\n                    onChange={this.onChangeCompanyname}\r\n                    />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Category: </label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    value={this.state.category}\r\n                    onChange={this.onChangeCategory}\r\n                    />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Status: </label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChangeStatus}\r\n                  />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Title: </label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    value={this.state.title}\r\n                    onChange={this.onChangeTitle}\r\n                  />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Description: </label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChangeDescription}\r\n                  />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Solution: </label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    value={this.state.solution}\r\n                    onChange={this.onChangeSolution}\r\n                  />\r\n              </div>\r\n      \r\n              <div className=\"form-group\">\r\n                <input type=\"submit\" value=\"Edit Ticket Log\" className=\"btn btn-primary\" />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )\r\n    }\r\n}","C:\\Dev\\IME InterX Website\\client\\src\\components\\create-ticket.component.js",["45"],"import React,{Component, component} from 'react'\r\nimport axios from'axios';\r\n\r\nexport default class CreateTicket extends Component{\r\nconstructor(props){\r\n    super(props);\r\n\r\n    this.onChangeUsername=this.onChangeUsername.bind(this);\r\n    this.onChangeCompanyname=this.onChangeCompanyname.bind(this);\r\n    this.onChangeCategory=this.onChangeCategory.bind(this);\r\n    this.onChangeStatus=this.onChangeStatus.bind(this);\r\n    this.onChangeTitle=this.onChangeTitle.bind(this);\r\n    this.onChangeDescription=this.onChangeDescription.bind(this);\r\n    this.onChangeSolution=this.onChangeSolution.bind(this);\r\n    this.onSubmit=this.onSubmit.bind(this);\r\n\r\n    this.state={\r\n        username:'',\r\n        companyname:'',\r\n        category:'',\r\n        status:'',\r\n        title:'',\r\n        description:'',\r\n        solution:'',\r\n        users:[]\r\n    }\r\n}\r\n\r\ncomponentDidMount(){\r\n    axios.get('http://localhost:5000/users/')\r\n    .then(response=>{\r\n        if(response.data.length>0){\r\n            this.setState({\r\n                users:response.data.map(user=>user.username),\r\n                username:response.data[0].username\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nonChangeUsername(e){\r\n    this.setState({\r\n        username:e.target.value\r\n    });\r\n}\r\n\r\nonChangeCompanyname(e){\r\n    this.setState({\r\n        companyname:e.target.value\r\n    });\r\n}\r\n\r\nonChangeCategory(e){\r\n    this.setState({\r\n        category:e.target.value\r\n    });\r\n}\r\n\r\nonChangeStatus(e){\r\n    this.setState({\r\n        status:e.target.value\r\n    });\r\n}\r\n\r\nonChangeTitle(e){\r\n    this.setState({\r\n        title:e.target.value\r\n    });\r\n}\r\n\r\nonChangeDescription(e){\r\n    this.setState({\r\n        description:e.target.value\r\n    });\r\n}\r\n\r\nonChangeSolution(e){\r\n    this.setState({\r\n        solution:e.target.value\r\n    });\r\n}\r\n\r\nonSubmit(e){\r\n    e.preventDefault();\r\n\r\n    const ticket ={\r\n        username:this.state.username,\r\n        companyname:this.state.companyname,\r\n        category:this.state.category,\r\n        status:this.state.status,\r\n        title:this.state.title,\r\n        description:this.state.description,\r\n        solution:this.state.solution\r\n    }\r\n\r\n    console.log(ticket)\r\n\r\n    axios.post('http://localhost:5000/tickets/add', ticket)\r\n    .then(res=>console.log(res.data));\r\n\r\n\r\n    window.location='/';\r\n}\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            <h3>Create New Ticket Log</h3>\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\"> \r\n                <label>Username: </label>\r\n                <select ref=\"userInput\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}>\r\n                    {\r\n                      this.state.users.map(function(user) {\r\n                        return <option \r\n                          key={user}\r\n                          value={user}>{user}\r\n                          </option>;\r\n                      })\r\n                    }\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\"> \r\n                <label>Company Name: </label>\r\n                <input  type=\"text\"\r\n                    required\r\n                    className=\"form-control\"\r\n                    value={this.state.companyname}\r\n                    onChange={this.onChangeCompanyname}\r\n                    />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Category: </label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    value={this.state.category}\r\n                    onChange={this.onChangeCategory}\r\n                    />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Status: </label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChangeStatus}\r\n                  />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Title: </label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    value={this.state.title}\r\n                    onChange={this.onChangeTitle}\r\n                  />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Description: </label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChangeDescription}\r\n                  />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Solution: </label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    value={this.state.solution}\r\n                    onChange={this.onChangeSolution}\r\n                  />\r\n              </div>\r\n      \r\n              <div className=\"form-group\">\r\n                <input type=\"submit\" value=\"Create Ticket Log\" className=\"btn btn-primary\" />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )\r\n    }\r\n}","C:\\Dev\\IME InterX Website\\client\\src\\components\\navbar.component.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":26,"nodeType":"52","messageId":"53","endLine":1,"endColumn":35},{"ruleId":"54","severity":1,"message":"55","line":15,"column":64,"nodeType":"56","endLine":15,"endColumn":129},{"ruleId":"50","severity":1,"message":"51","line":1,"column":26,"nodeType":"52","messageId":"53","endLine":1,"endColumn":35},{"ruleId":"50","severity":1,"message":"51","line":1,"column":26,"nodeType":"52","messageId":"53","endLine":1,"endColumn":35},{"ruleId":"50","severity":1,"message":"51","line":1,"column":26,"nodeType":"52","messageId":"53","endLine":1,"endColumn":35},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'component' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]